version: "3.9"

services:
  backend:
    container_name: backend
    image: python:3.10
    working_dir: "/backend"
    command: sh -c "
      python -m venv venv && . venv/bin/activate && pip install -U pip &&
      pip install -U "jax[cpu]" tensorflow-cpu tensorflow_text tensorflow_hub scikit-learn nltk gensim pyarrow &&
      pip install -U pandas fastapi "uvicorn[standard]" orjson openpyxl colorlog pyspellchecker coloredlogs &&
      cd src && python requirements.py && python run.py task general_tasks task_correct_essays &&
      python run.py task general_tasks task_pipeline_essays && uvicorn api:app --host 0.0.0.0 --reload"
    ports:
      - 8000:8000
    volumes:
      - ./backend:/backend

  frontend:
    container_name: frontend
    image: node:lts-alpine
    working_dir: "/frontend"
    #command: sh -c "yarn && yarn dev"
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/frontend

  database:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=text-grader
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5432:5432'
    volumes:
      #- ./postgres-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./sql/start-db.sql:/docker-entrypoint-initdb.d/create_tables.sql